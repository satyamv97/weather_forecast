{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\satyverm\\\\React\\\\weather_forecast\\\\src\\\\Components\\\\WeatherApp.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { CurrentWeather } from \"./CurrentWeather\";\nimport { Forecast } from \"./Forecast\";\nimport { Input } from \"./Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction WeatherApp() {\n  _s();\n  // let api_key = \"5a0d91aa2eb889bc8ed1ce44f7aac4c2\";\n  const [city, setCity] = useState('');\n  const [weatherData, setWeatherData] = useState(null);\n  const [unit, setUnit] = useState(\"metric\");\n  const [forecastData, setForecastData] = useState(null);\n\n  // const API_KEY = \"5a0d91aa2eb889bc8ed1ce44f7aac4c2\"\n  useEffect(() => {\n    if (city) {\n      axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=5a0d91aa2eb889bc8ed1ce44f7aac4c2`).then(response => {\n        setWeatherData(response.data);\n      }).catch(error => {\n        console.error('Error fetching', error);\n      });\n      axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=5a0d91aa2eb889bc8ed1ce44f7aac4c2`).then(response => {\n        setForecastData(response.data.list);\n      }).catch(error => {\n        console.error('Error fetching', error);\n      });\n    }\n  }, [city, unit]);\n\n  // const handleCityChange =(e) =>{\n  //     setCity(e.target.value)\n  console.log(weatherData);\n  console.log(forecastData);\n  console.log(city);\n  // }\n\n  function handleUnitToggle() {\n    setUnit(prevUnit => prevUnit === 'metric' ? 'imperial' : \"metric\");\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      city: city,\n      setCity: setCity,\n      handleUnitToggle: handleUnitToggle,\n      unit: unit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CurrentWeather, {\n      city: city,\n      weatherData: weatherData,\n      unit: unit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n      city: city,\n      forecastData: forecastData,\n      unit: unit,\n      weatherData: weatherData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(WeatherApp, \"rZNsHE0TZLHxVm15y2cM+yGjuag=\");\n_c = WeatherApp;\nexport default WeatherApp;\nvar _c;\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"names":["useEffect","useState","axios","CurrentWeather","Forecast","Input","jsxDEV","_jsxDEV","Fragment","_Fragment","WeatherApp","_s","city","setCity","weatherData","setWeatherData","unit","setUnit","forecastData","setForecastData","get","then","response","data","catch","error","console","list","log","handleUnitToggle","prevUnit","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/satyverm/React/weather_forecast/src/Components/WeatherApp.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { CurrentWeather } from \"./CurrentWeather\";\r\nimport { Forecast } from \"./Forecast\";\r\nimport { Input } from \"./Input\";\r\n\r\n\r\n\r\nfunction WeatherApp(){\r\n\r\n    // let api_key = \"5a0d91aa2eb889bc8ed1ce44f7aac4c2\";\r\n    const[city,setCity] = useState('')\r\n    const [weatherData, setWeatherData] = useState(null)\r\n    const [unit,setUnit] = useState(\"metric\")\r\n    const [forecastData, setForecastData] = useState(null)\r\n\r\n    // const API_KEY = \"5a0d91aa2eb889bc8ed1ce44f7aac4c2\"\r\n    useEffect(() => { \r\n        \r\n            if(city)\r\n            {               \r\n                axios\r\n                .get(\r\n                    `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=5a0d91aa2eb889bc8ed1ce44f7aac4c2`\r\n                )\r\n                \r\n                .then((response) => {\r\n                    setWeatherData(response.data)\r\n                    }) \r\n                    \r\n                .catch((error) => {\r\n                    console.error('Error fetching', error)\r\n                });\r\n                \r\n                axios\r\n                .get(\r\n                    `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=5a0d91aa2eb889bc8ed1ce44f7aac4c2`\r\n                )\r\n                \r\n                .then((response) => {\r\n                    setForecastData(response.data.list)\r\n                    }) \r\n                    \r\n                .catch((error) => {\r\n                    console.error('Error fetching', error)\r\n                });\r\n             }\r\n    },[city,unit]);\r\n   \r\n\r\n    // const handleCityChange =(e) =>{\r\n    //     setCity(e.target.value)\r\n        console.log(weatherData)\r\n        console.log(forecastData)\r\n        console.log(city)\r\n    // }\r\n\r\n    function handleUnitToggle(){\r\n        setUnit((prevUnit) => (prevUnit === 'metric' ? 'imperial' : \"metric\"));\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n        {/* <div className=\"inputdata\">\r\n        <input type =\"text\" value={city}  onChange={(e) => setCity(e.target.value)}/>\r\n        \r\n        <button onClick={handleUnitToggle}>\r\n            Toggle Unit ({unit === \"metric\" ? \"Fahrenheit\" : \"Celsius\" })\r\n        </button>\r\n        </div> */}\r\n        <Input city={city} setCity={setCity} handleUnitToggle = {handleUnitToggle} unit={unit}/>\r\n        \r\n        \r\n        <CurrentWeather city={city} weatherData ={weatherData} unit = {unit} />\r\n        \r\n        <Forecast city={city} forecastData={forecastData} unit={unit} weatherData = {weatherData}/>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default WeatherApp;\r\n\r\n\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,KAAK,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAIhC,SAASC,UAAUA,CAAA,EAAE;EAAAC,EAAA;EAEjB;EACA,MAAK,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACe,IAAI,EAACC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,QAAQ,CAAC;EACzC,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACAD,SAAS,CAAC,MAAM;IAER,IAAGY,IAAI,EACP;MACIV,KAAK,CACJkB,GAAG,CACC,qDAAoDR,IAAK,yCAC9D,CAAC,CAEAS,IAAI,CAAEC,QAAQ,IAAK;QAChBP,cAAc,CAACO,QAAQ,CAACC,IAAI,CAAC;MAC7B,CAAC,CAAC,CAELC,KAAK,CAAEC,KAAK,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MAC1C,CAAC,CAAC;MAEFvB,KAAK,CACJkB,GAAG,CACC,sDAAqDR,IAAK,yCAC/D,CAAC,CAEAS,IAAI,CAAEC,QAAQ,IAAK;QAChBH,eAAe,CAACG,QAAQ,CAACC,IAAI,CAACI,IAAI,CAAC;MACnC,CAAC,CAAC,CAELH,KAAK,CAAEC,KAAK,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MAC1C,CAAC,CAAC;IACL;EACT,CAAC,EAAC,CAACb,IAAI,EAACI,IAAI,CAAC,CAAC;;EAGd;EACA;EACIU,OAAO,CAACE,GAAG,CAACd,WAAW,CAAC;EACxBY,OAAO,CAACE,GAAG,CAACV,YAAY,CAAC;EACzBQ,OAAO,CAACE,GAAG,CAAChB,IAAI,CAAC;EACrB;;EAEA,SAASiB,gBAAgBA,CAAA,EAAE;IACvBZ,OAAO,CAAEa,QAAQ,IAAMA,QAAQ,KAAK,QAAQ,GAAG,UAAU,GAAG,QAAS,CAAC;EAC1E;EAGA,oBACIvB,OAAA,CAAAE,SAAA;IAAAsB,QAAA,gBAQAxB,OAAA,CAACF,KAAK;MAACO,IAAI,EAAEA,IAAK;MAACC,OAAO,EAAEA,OAAQ;MAACgB,gBAAgB,EAAIA,gBAAiB;MAACb,IAAI,EAAEA;IAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAGxF5B,OAAA,CAACJ,cAAc;MAACS,IAAI,EAAEA,IAAK;MAACE,WAAW,EAAGA,WAAY;MAACE,IAAI,EAAIA;IAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEvE5B,OAAA,CAACH,QAAQ;MAACQ,IAAI,EAAEA,IAAK;MAACM,YAAY,EAAEA,YAAa;MAACF,IAAI,EAAEA,IAAK;MAACF,WAAW,EAAIA;IAAY;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eACzF,CAAC;AAGX;AAACxB,EAAA,CAxEQD,UAAU;AAAA0B,EAAA,GAAV1B,UAAU;AA0EnB,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}