{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\satyverm\\\\React\\\\weather_forecast\\\\src\\\\Components\\\\WeatherApp.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { CurrentWeather } from \"./CurrentWeather\";\nimport { Forecast } from \"./Forecast\";\nimport { Input } from \"./Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction WeatherApp() {\n  _s();\n  // let api_key = \"5a0d91aa2eb889bc8ed1ce44f7aac4c2\";\n  const [city, setCity] = useState('');\n  const [input, setInput] = useState('');\n  const [weatherData, setWeatherData] = useState(null);\n  const [unit, setUnit] = useState(\"metric\");\n  const [forecastData, setForecastData] = useState(null);\n  const API_KEY = \"5a0d91aa2eb889bc8ed1ce44f7aac4c2\";\n  useEffect(() => {\n    function fetch() {\n      if (city) {\n        axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`).then(response => {\n          setWeatherData(response.data);\n        }).catch(error => {\n          console.error('Error fetching', error);\n        });\n        axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${API_KEY}`).then(response => {\n          setForecastData(response.data.list);\n        }).catch(error => {\n          console.error('Error fetching', error);\n        });\n      }\n    }\n    fetch();\n  }, [input]);\n  function handleUnitToggle() {\n    setUnit(prevUnit => prevUnit === 'metric' ? 'imperial' : \"metric\");\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      city: city,\n      setInput: setInput,\n      input: input,\n      setCity: setCity,\n      handleUnitToggle: handleUnitToggle,\n      unit: unit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CurrentWeather, {\n      input: input,\n      city: city,\n      weatherData: weatherData,\n      unit: unit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n      city: city,\n      forecastData: forecastData,\n      unit: unit,\n      weatherData: weatherData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(WeatherApp, \"WmaVLWdmsHmp6fzrbXtFx8/GZGE=\");\n_c = WeatherApp;\nexport default WeatherApp;\nvar _c;\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"names":["useEffect","useState","axios","CurrentWeather","Forecast","Input","jsxDEV","_jsxDEV","Fragment","_Fragment","WeatherApp","_s","city","setCity","input","setInput","weatherData","setWeatherData","unit","setUnit","forecastData","setForecastData","API_KEY","fetch","get","then","response","data","catch","error","console","list","handleUnitToggle","prevUnit","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/satyverm/React/weather_forecast/src/Components/WeatherApp.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { CurrentWeather } from \"./CurrentWeather\";\r\nimport { Forecast } from \"./Forecast\";\r\nimport { Input } from \"./Input\";\r\n\r\nfunction WeatherApp(){\r\n\r\n    // let api_key = \"5a0d91aa2eb889bc8ed1ce44f7aac4c2\";\r\n    const[city,setCity] = useState('')\r\n    const[input,setInput] = useState('')\r\n    const [weatherData, setWeatherData] = useState(null)\r\n    const [unit,setUnit] = useState(\"metric\")\r\n    const [forecastData, setForecastData] = useState(null)\r\n\r\n    const API_KEY = \"5a0d91aa2eb889bc8ed1ce44f7aac4c2\"\r\n    useEffect(() => { \r\n        \r\n            function fetch()\r\n            {\r\n                if(city)\r\n            {               \r\n                axios\r\n                .get(\r\n                    `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`\r\n                )\r\n                \r\n                .then((response) => {\r\n                    setWeatherData(response.data)\r\n                    }) \r\n                    \r\n                .catch((error) => {\r\n                    console.error('Error fetching', error)\r\n                });\r\n                \r\n                axios\r\n                .get(\r\n                    `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${API_KEY}`\r\n                )\r\n                \r\n                .then((response) => {\r\n                    setForecastData(response.data.list)\r\n                    }) \r\n                    \r\n                .catch((error) => {\r\n                    console.error('Error fetching', error)\r\n                });\r\n             }\r\n\r\n            }\r\n            fetch();\r\n    },[input]);\r\n   \r\n    function handleUnitToggle(){\r\n        setUnit((prevUnit) => (prevUnit === 'metric' ? 'imperial' : \"metric\"));\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <Input city={city} setInput={setInput} input={input} setCity={setCity} handleUnitToggle = {handleUnitToggle} unit={unit}/>\r\n        \r\n        <CurrentWeather input={input} city={city} weatherData ={weatherData} unit = {unit} />\r\n        \r\n        <Forecast city={city} forecastData={forecastData} unit={unit} weatherData = {weatherData}/>\r\n        </>   \r\n    )\r\n}\r\n\r\nexport default WeatherApp;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}