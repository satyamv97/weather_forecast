{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\satyverm\\\\React\\\\weather_forecast\\\\src\\\\Components\\\\Input.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Input() {\n  _s();\n  let api_key = \"5a0d91aa2eb889bc8ed1ce44f7aac4c2\";\n  // const[input,setInput] = useState()\n  const [searchcity, setSearchCity] = useState(\"Mumbai\");\n  // // console.log(city);,\n  const [cityNotFound, setCityNotFound] = useState(false);\n  const [weatherData, setWeatherData] = useState(null);\n  // const city = \"Pune\"\n  useEffect(() => {\n    const fetchApi = async () => {\n      try {\n        const url = `https://api.openweathermap.org/data/2.5/weather?q=${searchcity}&appid=${api_key}`;\n        const response = await fetch(url);\n        const resJSON = await response.json();\n        if (resJSON.cod === \"404\") {\n          setCityNotFound(true);\n        } else {\n          console.log(resJSON);\n          // console.log(resJSON.main.temp);\n          setWeatherData(resJSON);\n          setCityNotFound(false);\n        }\n      } catch (error) {\n        console.error('Error fetching weather Data', error);\n      }\n    };\n    fetchApi();\n  }, [searchcity]);\n  // console.log(input)\n  // console.log(searchcity)\n\n  function clickHandler() {\n    // setSearchCity(searchcity)\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputdata\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setSearchCity(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clickHandler,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), cityNotFound ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"NO Data found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: weatherData.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 48\n    }, this)\n\n    // <div className=\"onfo\">\n    //     <h2>\n    //     <i className=\"fa-solid fa-location-dot\"></i>{weatherData.main.name}\n    //     </h2>\n\n    // <h1>\n    //     {/* {weatherData.main.temp} */}\n    //     10 Cel\n    // </h1>\n\n    // <h3>Min :\n    //      {/* {weatherData.main.temp_min} */}\n    // 100 deg cel  |  Max :\n    //  {/* {weatherData.main.temp_max}  */}\n    //   100 cel</h3>\n\n    // </div>\n    ]\n  }, void 0, true);\n}\n_s(Input, \"R18e/qsqOQSsDfqpBV3ILuwFqa0=\");\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Input","_s","api_key","searchcity","setSearchCity","cityNotFound","setCityNotFound","weatherData","setWeatherData","fetchApi","url","response","fetch","resJSON","json","cod","console","log","error","clickHandler","children","className","type","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","name","_c","$RefreshReg$"],"sources":["C:/Users/satyverm/React/weather_forecast/src/Components/Input.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\n\r\nfunction Input(){\r\n\r\n    let api_key = \"5a0d91aa2eb889bc8ed1ce44f7aac4c2\";\r\n    // const[input,setInput] = useState()\r\n    const[searchcity,setSearchCity] = useState(\"Mumbai\")\r\n    // // console.log(city);,\r\n    const[cityNotFound,setCityNotFound] = useState(false)\r\n\r\n    const [weatherData, setWeatherData] = useState(null)\r\n// const city = \"Pune\"\r\n    useEffect(() => {\r\n        const fetchApi = async () => {\r\n            try{\r\n\r\n                const url = `https://api.openweathermap.org/data/2.5/weather?q=${searchcity}&appid=${api_key}`;\r\n                const response = await fetch(url);\r\n                \r\n                const resJSON =  await response.json();\r\n                if( resJSON.cod ===\"404\"){\r\n\r\n                    setCityNotFound(true)\r\n                }\r\n                else{\r\n\r\n                    console.log(resJSON);\r\n                    // console.log(resJSON.main.temp);\r\n                    setWeatherData(resJSON)\r\n                    setCityNotFound(false)\r\n                }\r\n            }\r\n            \r\n            catch(error){\r\n                    console.error('Error fetching weather Data',error)\r\n            }\r\n\r\n        };\r\n\r\n        fetchApi()\r\n\r\n    },[searchcity])\r\n    // console.log(input)\r\n    // console.log(searchcity)\r\n\r\n    function clickHandler(){\r\n        // setSearchCity(searchcity)\r\n    }\r\n    return(\r\n        <>\r\n        <div className=\"inputdata\">\r\n        <input type =\"text\"  onChange={(e) => setSearchCity(e.target.value)}/>\r\n        <button onClick={clickHandler}>Search</button>\r\n        </div>\r\n\r\n        {cityNotFound ? <p>NO Data found</p> : <p>{weatherData.name}</p>\r\n\r\n        // <div className=\"onfo\">\r\n        //     <h2>\r\n        //     <i className=\"fa-solid fa-location-dot\"></i>{weatherData.main.name}\r\n        //     </h2>\r\n\r\n        // <h1>\r\n        //     {/* {weatherData.main.temp} */}\r\n        //     10 Cel\r\n        // </h1>\r\n\r\n        // <h3>Min :\r\n        //      {/* {weatherData.main.temp_min} */}\r\n        // 100 deg cel  |  Max :\r\n        //  {/* {weatherData.main.temp_max}  */}\r\n        //   100 cel</h3>\r\n\r\n        // </div>\r\n        \r\n         } \r\n\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default Input;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG5C,SAASC,KAAKA,CAAA,EAAE;EAAAC,EAAA;EAEZ,IAAIC,OAAO,GAAG,kCAAkC;EAChD;EACA,MAAK,CAACC,UAAU,EAACC,aAAa,CAAC,GAAGT,QAAQ,CAAC,QAAQ,CAAC;EACpD;EACA,MAAK,CAACU,YAAY,EAACC,eAAe,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxD;EACID,SAAS,CAAC,MAAM;IACZ,MAAMe,QAAQ,GAAG,MAAAA,CAAA,KAAY;MACzB,IAAG;QAEC,MAAMC,GAAG,GAAI,qDAAoDP,UAAW,UAASD,OAAQ,EAAC;QAC9F,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;QAEjC,MAAMG,OAAO,GAAI,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QACtC,IAAID,OAAO,CAACE,GAAG,KAAI,KAAK,EAAC;UAErBT,eAAe,CAAC,IAAI,CAAC;QACzB,CAAC,MACG;UAEAU,OAAO,CAACC,GAAG,CAACJ,OAAO,CAAC;UACpB;UACAL,cAAc,CAACK,OAAO,CAAC;UACvBP,eAAe,CAAC,KAAK,CAAC;QAC1B;MACJ,CAAC,CAED,OAAMY,KAAK,EAAC;QACJF,OAAO,CAACE,KAAK,CAAC,6BAA6B,EAACA,KAAK,CAAC;MAC1D;IAEJ,CAAC;IAEDT,QAAQ,CAAC,CAAC;EAEd,CAAC,EAAC,CAACN,UAAU,CAAC,CAAC;EACf;EACA;;EAEA,SAASgB,YAAYA,CAAA,EAAE;IACnB;EAAA;EAEJ,oBACItB,OAAA,CAAAE,SAAA;IAAAqB,QAAA,gBACAvB,OAAA;MAAKwB,SAAS,EAAC,WAAW;MAAAD,QAAA,gBAC1BvB,OAAA;QAAOyB,IAAI,EAAE,MAAM;QAAEC,QAAQ,EAAGC,CAAC,IAAKpB,aAAa,CAACoB,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACtEjC,OAAA;QAAQkC,OAAO,EAAEZ,YAAa;QAAAC,QAAA,EAAC;MAAM;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,EAELzB,YAAY,gBAAGR,OAAA;MAAAuB,QAAA,EAAG;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAAGjC,OAAA;MAAAuB,QAAA,EAAIb,WAAW,CAACyB;IAAI;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;;IAE/D;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;;IAEA;IAAA;EAAA,eAIE,CAAC;AAGX;AAAC7B,EAAA,CA9EQD,KAAK;AAAAiC,EAAA,GAALjC,KAAK;AAgFd,eAAeA,KAAK;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}