{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\satyverm\\\\React\\\\weather_forecast\\\\src\\\\Components\\\\Forecast.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Forecast({\n  forecastData,\n  unit,\n  weatherData\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: forecastData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"center\",\n        children: \" Every 3 Hour Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fivedaymaindiv\",\n        children: forecastData.slice(0, 5).map(forecast => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"eachdaydiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://openweathermap.org/img/w/${forecast.weather[0].icon}.png`,\n            alt: \"Weather Icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", new Date(forecast.dt * 1000).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" Avg :\", unit === 'metric' ? Math.round(weatherData.main.temp - 273.15) : Math.round((weatherData.main.temp - 273.15) * 9 / 5 + 32), \"\\xB0\", unit === 'metric' ? 'C' : 'F']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"  \", forecast.weather[0].description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 33\n          }, this)]\n        }, forecast.dt, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 9\n  }, this);\n}\n_c = Forecast;\nvar _c;\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"names":["Forecast","forecastData","unit","weatherData","_jsxDEV","children","className","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","forecast","src","weather","icon","alt","Date","dt","toLocaleDateString","Math","round","main","temp","description","_c","$RefreshReg$"],"sources":["C:/Users/satyverm/React/weather_forecast/src/Components/Forecast.js"],"sourcesContent":["export function Forecast({ forecastData, unit, weatherData }) {\r\n    return (\r\n        <div>\r\n            {forecastData && (\r\n                <div>\r\n                    <h1 className=\"center\"> Every 3 Hour Forecast</h1>\r\n                    <div className=\"fivedaymaindiv\">\r\n                        {forecastData.slice(0, 5).map((forecast) => (\r\n                            <div key={forecast.dt} className=\"eachdaydiv\">\r\n                                <img src={`http://openweathermap.org/img/w/${forecast.weather[0].icon}.png`}\r\n                                    alt=\"Weather Icon\"></img>\r\n                                <p> {new Date(forecast.dt * 1000).toLocaleDateString()}</p>\r\n                                <p> Avg :{unit === 'metric' ? Math.round(weatherData.main.temp - 273.15) : Math.round((weatherData.main.temp - 273.15) * 9 / 5 + 32)}&deg;\r\n                                    {unit === 'metric' ? 'C' : 'F'}</p>\r\n                                <p>  {forecast.weather[0].description}</p>\r\n                                \r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAO,SAASA,QAAQA,CAAC;EAAEC,YAAY;EAAEC,IAAI;EAAEC;AAAY,CAAC,EAAE;EAC1D,oBACIC,OAAA;IAAAC,QAAA,EACKJ,YAAY,iBACTG,OAAA;MAAAC,QAAA,gBACID,OAAA;QAAIE,SAAS,EAAC,QAAQ;QAAAD,QAAA,EAAC;MAAsB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClDN,OAAA;QAAKE,SAAS,EAAC,gBAAgB;QAAAD,QAAA,EAC1BJ,YAAY,CAACU,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAEC,QAAQ,iBACnCT,OAAA;UAAuBE,SAAS,EAAC,YAAY;UAAAD,QAAA,gBACzCD,OAAA;YAAKU,GAAG,EAAG,mCAAkCD,QAAQ,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,IAAK,MAAM;YACxEC,GAAG,EAAC;UAAc;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC7BN,OAAA;YAAAC,QAAA,GAAG,GAAC,EAAC,IAAIa,IAAI,CAACL,QAAQ,CAACM,EAAE,GAAG,IAAI,CAAC,CAACC,kBAAkB,CAAC,CAAC;UAAA;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3DN,OAAA;YAAAC,QAAA,GAAG,QAAM,EAACH,IAAI,KAAK,QAAQ,GAAGmB,IAAI,CAACC,KAAK,CAACnB,WAAW,CAACoB,IAAI,CAACC,IAAI,GAAG,MAAM,CAAC,GAAGH,IAAI,CAACC,KAAK,CAAC,CAACnB,WAAW,CAACoB,IAAI,CAACC,IAAI,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,EAAC,MACjI,EAACtB,IAAI,KAAK,QAAQ,GAAG,GAAG,GAAG,GAAG;UAAA;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvCN,OAAA;YAAAC,QAAA,GAAG,IAAE,EAACQ,QAAQ,CAACE,OAAO,CAAC,CAAC,CAAC,CAACU,WAAW;UAAA;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GANpCG,QAAQ,CAACM,EAAE;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQhB,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EACR;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEA,CAAC;AAEd;AAACgB,EAAA,GAxBe1B,QAAQ;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}